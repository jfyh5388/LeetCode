/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
class Solution {
public:
    int listlen(ListNode *l)
    {
        int len=0;
        ListNode *p=l;
        while(p)
        {
            p=p->next;
            len++;
        }
        return len;
    }
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode *l1=headA;
        ListNode *l2=headB;
        int len1=listlen(l1);
        int len2=listlen(l2);
        int mid=0;
        if(len1<len2)
        {
            l1=headB;
            l2=headA;
            mid=len1;
            len1=len2;
            len2=mid;
        }
        while(len1>len2)
        {
            l1=l1->next;
            len1--;
        }
        while(l1!=NULL&&l1!=l2)
        {
            l1=l1->next;
            l2=l2->next;
        }
        if(l1==NULL)
            return NULL;
        return l1;
    }
};